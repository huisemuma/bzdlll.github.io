import com.greensock.TweenMax;import com.greensock.easing.*;var boxArr:Array = [];var ballR:int = 80;var ballF:int = 9;var centerArr:Array = [];var rArr:Array = [];var rotX:Number = 10;var rotY:Number = 0;var rotZ:Number = 0;var ball3Arr:Array = [];function creatBox():MovieClip{	var foo:MovieClip = new MovieClip();	foo.graphics.lineStyle(2, 0x222222, 1);	foo.graphics.drawRect(-100, -100, 200, 200);	foo.graphics.endFill();	return foo;}for(var i:int = 0; i < 4; i++){	boxArr.push(creatBox());	boxArr[i].x = 100 + i % 2 * 200;	boxArr[i].y = 100 + int(i / 2) * 200;	boxArr[i].graphics.lineStyle(2, 0xFFFFFF, 0.2);	boxArr[i].graphics.drawCircle(0, 0, ballR);	boxArr[i].graphics.endFill();		addChild(boxArr[i]);		var ball0;	var ball1 = new MovieClip();	var ball2 = new MovieClip();	var ball3 = new MovieClip();}function init(){	for(var i:int = 0; i < ballF; i++)	{		centerArr.push(-ballR + (ballR * 2 / ballF) * (i + 0.5));		rArr.push(Math.sqrt(Math.pow(ballR, 2) - Math.pow(centerArr[i], 2)));	}	trace(centerArr);		ball0 = creatBox0();	ball0.rotation = rotX;	boxArr[0].addChild(ball0);		//ball1 = creatBox1();	boxArr[1].addChild(ball1);		//ball2 = creatBox2();	boxArr[2].addChild(ball2);		ball3 = creatBox3();	//ball3.rotationX = rotX;	boxArr[3].addChild(ball3);		drawBall();}init();TweenMax.delayedCall(0.2, run);addEventListener(Event.ENTER_FRAME, drawBall);function drawBall(e:Event = null){	//ball3.rotationX = (mouseY - 200)/4;		drawBox0();	drawBox1();	drawBox2();	drawBox3();}function run(){	TweenMax.to(ball3, 3, {rotationX:-60, ease:Sine.easeInOut});	TweenMax.to(ball3, 3, {rotationX:60, delay:3, ease:Sine.easeInOut, overwrite:false, onComplete:run});}function creatBox0():MovieClip{	var foo0:MovieClip = new MovieClip();	foo0.graphics.lineStyle(1, 0xFFFFFF, 1);	for(var i:int = 0; i < ballF; i++)	{		foo0.graphics.lineStyle(1, 0xFFFFFF, 1);		foo0.graphics.drawEllipse(-rArr[i], centerArr[i], rArr[i] * 2, 1);	}		return foo0;}function drawBox0(){	ball0.rotation = rotX;}function creatBox1():MovieClip{	var foo1:MovieClip = new MovieClip();	return foo1;}function drawBox1(){	var _yPercent:Number = Math.cos(rotX * Math.PI / 180);	var _hPercent:Number = Math.sin(rotX * Math.PI / 180);	ball1.graphics.clear();	ball1.graphics.lineStyle(1, 0xFFFFFF, 1);	for(var i:int = ballF - 1; i >= 0; i--)	{		ball1.graphics.lineStyle(1 - 1 * centerArr[i] / 1000 * (rotX), 0xFFFFFF, 1 - 1 * centerArr[i] / 5000 * (rotX));		ball1.graphics.drawEllipse(-rArr[i], centerArr[i] * _yPercent - _hPercent * rArr[i], rArr[i] * 2, _hPercent * rArr[i] * 2);	}}function creatBox2():MovieClip{	var foo2:MovieClip = new MovieClip();	return foo2;}function drawBox2(){	var _yPercent:Number = Math.sin(rotX * Math.PI / 180);	var _hPercent:Number = Math.cos(rotX * Math.PI / 180);	ball2.graphics.clear();	ball2.graphics.lineStyle(1, 0xFFFFFF, 1);	for(var i:int = ballF - 1; i >= 0; i--)	{		ball2.graphics.lineStyle(1 + 0.4 * i, 0xFFFFFF, 0.3 + 0.15 * i);		ball2.graphics.drawEllipse(-rArr[i], centerArr[i] * _yPercent - _hPercent * rArr[i], rArr[i] * 2, _hPercent * rArr[i] * 2);	}}function creatBox3():MovieClip{	var foo3:MovieClip = new MovieClip()	var point = new PerspectiveProjection();	point.projectionCenter = new Point(300, 220);	point.fieldOfView = 60;	this.transform.perspectiveProjection = point;		for(var i:int = 0; i < ballF; i++)	{		ball3Arr.push(creatCirc(rArr[i]));		ball3Arr[i].y = centerArr[i];		ball3Arr[i].rotationX = 90;		foo3.addChildAt(ball3Arr[i], 0);	}		function creatCirc(_r:Number):MovieClip	{		var _foo:MovieClip = new MovieClip();		_foo.graphics.lineStyle(2, 0xFFFFFF, 1);		_foo.graphics.beginFill(0x888888, 0.7);		_foo.graphics.drawCircle(0, 0, _r);		_foo.graphics.endFill();				return _foo;	}		foo3.z = ballR / 5 * 1;		return foo3;}function drawBox3(){	rotX = ball3.rotationX;		for (var i = 0; i < ballF; i++)	{		ball3Arr[i].Z = ball3Arr[i].transform.getRelativeMatrix3D(root).position.z;		ball3.addChildAt(ball3Arr[i] as MovieClip, i);	}		ball3Arr.sortOn("Z",Array.NUMERIC | Array.DESCENDING);}