import com.greensock.TweenMax;import com.greensock.easing.*;var R:Number = 60;var pointArr:Array = [];var stickUp = creatStick();var stickDown = creatStick();var line = creatStick();var rate:Number = 0.8;addChild(stickUp);addChild(stickDown);addChild(line);var lineBox:MovieClip = new MovieClip();addChild(lineBox);line.x = 200, line.y = 350;stickDown.x = 200, stickDown.y = 350;stickUp.x = 200, stickUp.y = 350 - R * 2;for(var i:int = 0; i < 8; i++){	pointArr.push(new Point(0, 0));}function creatStick():Shape{	var foo:Shape = new Shape();	foo.graphics.lineStyle(4, 0xFFFFFF, 1);	foo.graphics.drawCircle(0, 0, 8);	foo.graphics.endFill();	foo.graphics.moveTo(-R, 0);	foo.graphics.lineTo(R, 0);	//	return foo;}function drawLine(e:Event = null){	pointArr[0].x = stickUp.x + Math.cos((stickUp.rotation + 180) * Math.PI / 180) * R;	pointArr[0].y = stickUp.y + Math.sin((stickUp.rotation + 180) * Math.PI / 180) * R;		pointArr[1].x = stickUp.x + Math.cos(stickUp.rotation * Math.PI / 180) * R;	pointArr[1].y = stickUp.y + Math.sin(stickUp.rotation * Math.PI / 180) * R;		pointArr[2].x = stickDown.x + stickDown.width / 2;	pointArr[2].y = stickDown.y;		pointArr[3].x = stickDown.x - stickDown.width / 2;	pointArr[3].y = stickDown.y;		pointArr[4].x = (pointArr[0].x + pointArr[1].x) / 2;	pointArr[4].y = (pointArr[0].y + pointArr[1].y) / 2;		pointArr[5].x = (pointArr[1].x + pointArr[2].x) / 2;	pointArr[5].y = (pointArr[1].y + pointArr[2].y) / 2;		pointArr[6].x = (pointArr[2].x + pointArr[3].x) / 2;	pointArr[6].y = (pointArr[2].y + pointArr[3].y) / 2;		pointArr[7].x = (pointArr[3].x + pointArr[0].x) / 2;	pointArr[7].y = (pointArr[3].y + pointArr[0].y) / 2;		lineBox.graphics.clear();	lineBox.graphics.beginFill(0xFFFFFF, 1);	lineBox.graphics.moveTo(pointArr[4].x, pointArr[4].y);	lineBox.graphics.curveTo(pointArr[1].x, pointArr[1].y, pointArr[5].x, pointArr[5].y);	lineBox.graphics.curveTo(pointArr[2].x, pointArr[2].y, pointArr[6].x, pointArr[6].y);	lineBox.graphics.curveTo(pointArr[3].x, pointArr[3].y, pointArr[7].x, pointArr[7].y);	lineBox.graphics.curveTo(pointArr[0].x, pointArr[0].y, pointArr[4].x, pointArr[4].y);	lineBox.graphics.endFill();		lineBox.graphics.lineStyle(4, 0xFFFFFF, 1);	lineBox.graphics.moveTo(0, 300);	lineBox.graphics.curveTo(100, line.y, 200, line.y);	lineBox.graphics.curveTo(300, line.y, 400, 300);	lineBox.graphics.endFill();}addEventListener(Event.ENTER_FRAME, drawLine);run()function run(){	TweenMax.to(stickUp, 0 * rate, {y:270, scaleX:0.4, overwrite:false});	TweenMax.to(stickDown, 0 * rate, {y:350, scaleX:2, overwrite:false});	TweenMax.to(line, 0 * rate, {y:350, overwrite:false});	TweenMax.to(stickUp, 0.2 * rate, {y:210, scaleX:0.8, ease:Quad.easeIn, overwrite:false});	TweenMax.to(stickDown, 0.2 * rate, {y:350, scaleX:0.8, ease:Quad.easeIn, overwrite:false});		TweenMax.to(stickUp, 0.6 * rate, {scaleX:1, ease:Elastic.easeOut, delay:0.2 * rate, overwrite:false});	TweenMax.to(stickDown, 0.6 * rate, {scaleX:1, y:stickUp + 120, ease:Elastic.easeOut, delay:0.2 * rate, overwrite:false});	TweenMax.to(line, 0.8 * rate, {y:300, delay:0.2 * rate, ease:Elastic.easeOut, overwrite:false});		TweenMax.to(stickUp, 0.8 * rate, {y:20, ease:Quad.easeOut, delay:0.2 * rate, overwrite:false});	TweenMax.to(stickDown, 0.8 * rate, {y:140, ease:Quad.easeOut, delay:0.2 * rate, overwrite:false});		TweenMax.to(stickUp, 0.8 * rate, {y:230, ease:Quad.easeIn, delay:1 * rate, overwrite:false});	TweenMax.to(stickDown, 0.8 * rate, {y:350, ease:Quad.easeIn, delay:1 * rate, overwrite:false});		TweenMax.to(line, 0.2 * rate, {y:350, delay:1.7 * rate, ease:Quad.easeOut, overwrite:false});		TweenMax.to(stickUp, 0.2 * rate, {y:270, scaleX:0.4, ease:Quad.easeOut, delay:1.8 * rate, overwrite:false});	TweenMax.to(stickDown, 0.2 * rate, {y:350, scaleX:2, ease:Quad.easeOut, delay:1.8 * rate, overwrite:false});		TweenMax.delayedCall(2 * rate, run);}